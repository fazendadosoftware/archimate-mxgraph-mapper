name: CI for release tags

on:
  push:
    # Sequence of patterns matched against refs/tags
  #  tags:
  #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  once:
    name: Create single release for all builds
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  build:
    name: Create cross-platform release builds, tag and upload binaries
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [windows-latest, macos-latest, ubuntu-latest]
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install dependencies
        run: npm install

      - name: Build binaries
        run: npm run electron:build --publish always
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List contents
        run: ls ${{ github.workspace }}/dist_electron

      #- name: Zip the asset into a zip file
      #  id: zip_asset
      #  run: |
      #    7z a -tzip ${{ github.workspace }}/dist_electron/xtest-${{ matrix.os }}-${{ github.ref }}.zip ${{ github.workspace }}/Release/xtest*

      #- name: Upload release assets
      #  id: upload_assets
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ needs.once.outputs.upload_url }}
      #    asset_path: ${{ github.workspace }}/Release/xtest-${{ matrix.os }}-${{ github.ref }}.zip
      #    asset_name: xtest-${{ matrix.os }}-${{ github.ref }}.zip
      #    asset_content_type: application/octet-stream